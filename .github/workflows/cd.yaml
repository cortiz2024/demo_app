name: CD - Python Chart

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: 'version de aplicaci√≥n'
        default: v0.1.0
      helmVersion:
        description: 'version de chart de Helm'
        default: '0.1.0'
      chartName:
        description: 'Nombre de chart de Helm'
        default: 'pythonChart'
      environment:
        description: 'Ambiente'
        type: choice
        options:
        - prod
        - qa
        - dev
    
jobs:
  push-helm-chart:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configurar values.yaml
      run: |
        cp .devops/values-${{ inputs.environment }}.yaml pythonChart/values.yaml
        sed -i "s/tag: \".*\"/tag: \"${{ inputs.appVersion }}\"/" pythonChart/values.yaml
      
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.3 #Helm 13 tiene un bug
    
    - name: Login to GitHub Container Registry
      uses: azure/docker-login@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Enpaquetar y subir helm a ghcr
      shell: bash
      run: |-
        export HELM_EXPERIMENTAL_OCI=1 #Es necesario para el chart save
        helm package ${{ inputs.chartName }} --version ${{ inputs.helmVersion }}
        helm push python-app-${{ inputs.helmVersion }}.tgz oci://ghcr.io/cortiz2024/demo_app

  # deploy-helm-chart:
  #   permissions: write-all
  #   runs-on: ubuntu-latest
  #   env:
  #     GITHUB_TOKEN:
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4
    