name: Continuous Deployment
on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: 'version de aplicaciÃ³n'
        required: true
      helmVersion: 
        description: 'version de helm'
        required: false
        default: ''
      chartFolder:
        description: 'Nombre de folder del chart de Helm'
        default: 'pythonChart'
      chartName:
        description: 'Nombre de chart de Helm'
        default: 'python-chart'
      test:
        description: 'Test'
        required: true
        type: boolean
        default: false
      qa:
        description: 'QA'
        required: true
        type: boolean
        default: false
      prod:
        description: 'Production'
        required: true
        type: boolean
        default: false
jobs:
  Preparativos:
    name: ðŸ“• Preparativos
    outputs:
      helmVersion: ${{ steps.helmVersion.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - run: echo preparativos
      - run: echo Github refs ${{ github.ref }}
      - run: echo Version App ${{ inputs.appVersion }}
      - run: echo Helm Version ${{ inputs.helmVersion }}
      - name: Show Environment to deploy
        run: |
          echo "test=${{ inputs.test }}"
          echo "qa=${{ inputs.qa }}"
          echo "prod=${{ inputs.prod }}"
      - id: helmVersion
        run: |
          defaultVersion="${{ inputs.appVersion }}-${{ github.run_number }}"
          if [[ -z "${{ inputs.helmVersion }}" ]]; then
            echo "version=$defaultVersion" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.helmVersion }}" >> $GITHUB_OUTPUT
          fi
      - name: Validate variables
        run: |
          if [[ -z "${{ vars.APPNAME }}" ]]; then
            echo "APPNAME is empty"
            exit 1
          fi
          if [[ -z "${{ vars.PROJECT }}" ]]; then
            echo "PROJECT is empty"
            exit 1
          fi

  Deploy_to_test:
    name: ðŸš€ Deploy Test
    environment: Test
    needs: Preparativos
    runs-on: ubuntu-latest
    if: ${{ always()  && inputs.test }} 
    outputs:
      name_environment: ${{ steps.deploy.outputs.name_environment }}
    steps:
      - run: echo Deploy Test
      - name: Deploy
        id: deploy
        uses: infrastructure-services/continuos-deployment@build-and-deploy
        with:
          appName: ${{ vars.APPNAME }}
          teamProject: ${{ vars.PROJECT }}
          namespace: ${{ vars.PROJECT }}-${{ vars.ENVIRONMENT_NAME }}
          appVersion: ${{ inputs.appVersion }}
          fileValuesPath: .devops/value-${{ vars.ENVIRONMENT_NAME }}.yaml
          GITHUB_HELMREPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          helmChartVersionLatest: ${{ needs.Preparativos.outputs.helmVersion }}-${{ vars.ENVIRONMENT_NAME }}
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GHCR_REGISTRY: ghcr.io
          GHCR_PAT: ${{ secrets.GH_PAT }}
          environment: ${{ vars.ENVIRONMENT_NAME }}
          chartFolder: ${{ inputs.chartFolder }}
          chartName: ${{ inputs.chartName }}
          helmRepo: cortiz2024/demo_app/pythonChart
          helmRepoRef: main
